@page "/customers"
@using CarRental.Business.Classes
@inject BookingProcessor BP

<h1>Car Rental</h1>
<h3>Customers</h3>

@if (error != string.Empty)
{
    <div class="row">
        <div class="col-12 alert alert-danger" role="alert">
            <strong>Error</strong> @error
        </div>
    </div>
}
<div class="row">
    <div class="col-6">
        <table class="table table-hover" style="border: 1px solid">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">SSN</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">First Name</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row"><input style="height:31px;" placeholder="SSN" @bind="social" /></th>
                    <td><input style="height:31px;" placeholder="First Name" @bind="firstName" /></td>
                    <td><input style="height:31px;" placeholder="Last Name" @bind="lastName" /></td>
                    <td><button class="btn btn-outline-success btn-sm" @onclick="AddCustomer">Add</button></td>
                </tr>
                @foreach (var customer in BP.GetCustomers())
                {
                    <tr>
                        <th scope="row">@customer.SocialSecurityNumber</th>
                        <td>@customer.LastName</td>
                        <td>@customer.FirstName</td>
                        <td></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-6">
    </div>
</div>

@code {
    string error = string.Empty;
    string social = string.Empty;
    string firstName = string.Empty;
    string lastName = string.Empty;

    void AddCustomer()
    {
        try
        {

        }
        catch (Exception ex)
        {

            error = ex.Message;
        }
    }
}
